<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 다른 mapper와 중복되지 않도록 네임스페이스 기재 -->
<!-- 회원가입 -->
<mapper namespace="memberboard">
	
	<!-- rownum을 rn이란 문자로 줄여쓴다. 밑에 from문을 A로 줄여쓴다.  -->
  				<!-- 이 from문이 먼저 실행된 다음에 번호를 붙였기 때문에 일련번호가 다시 새로 매겨졌다. -->
        		<!--  이 안쪽의 쿼리가 가장 중요함 -->
        		
        		
<select id="listAll" resultType="com.example.hansub_project.model.board.dto.MemberBoardDTO">
<!-- 결과는 boardDTO타입이 된 -->
		<include refid="paging_header" /> 
		
		<!-- ref는 다른테이블을 의미한다. -->
		<!-- 번호, 제목, 작성자, 이름, 날짜, 조회수 , 그리고 댓글의 갯수를 검색 -->
		<!-- board 테이블과 member 테이블로 부터 검색 -->
			select member_bno, user_id, reg_date, viewcnt, title, rcnt, content, recommend			
			from member_board
			<!-- bno의 내림차순으로 검색 -->
			<!-- where절은 (조건)은 include 태그를 이용했음 -->
		<include refid="search" />
			order by member_bno desc
		<include refid="paging_footer" />		
	</select>
	
	
	<sql id="paging_header">
	<!-- 게시물을 한페이지에 10개씩 볼 수 있게하는 쿼리 윗부분-->
		select *
		from (
		    select rownum as rn, A.*
		    from (	
	</sql>
	
	
	<sql id="paging_footer">
	<!-- 게시물을 한페이지에 10개씩 볼 수 있게하는 쿼리  아랫 부분-->
	<!-- 새로 매겨진 일련번호 1~10번 글까지 1페이지 -->
	<!-- 11~20번 글까지 2페이지.. -->
		    ) A
		) where rn between #{start} and #{end}	
	</sql>
	

	<sql id="search">
        <choose>
          
            <when test="search_option == 'all' ">
                where  
                      user_id like '%'||#{keyword}||'%'
                      or content like '%' || #{keyword}||'%'
                      or title like '%'||#{keyword}||'%'   
            </when>
            <otherwise>
                where ${search_option} like '%'||#{keyword}||'%'
            </otherwise>
        </choose>
    </sql>


</mapper>
